@import 'mixins.less';
@import 'variables.less';

.alert() {
	padding: @alert-padding;
	margin-bottom: @line-height-computed;
	border: 1px solid transparent;
	border-radius: @alert-border-radius;
	// Headings for larger alerts
	h4 {
		margin-top: 0;
		// Specified for the h4 to prevent conflicts of changing @headingsColor
		color: inherit;
	}
	// Provide class for links that match alerts
	.alert-link {
		font-weight: @alert-link-font-weight;
	}
	// Improve alignment and spacing of inner content
	> p,
	> ul {
		margin-bottom: 0;
	}
	> p + p {
		margin-top: 5px;
	}
}

.alert-dismissable() {
	padding-right: (@alert-padding + 20);
	// Adjust close link position
	.close {
		position: relative;
		top: -2px;
		right: -21px;
		color: inherit;
	}
}

.alert-success() {
	.alert-variant(@alert-success-bg, @alert-success-border, @alert-success-text);
}

.alert-info() {
	.alert-variant(@alert-info-bg, @alert-info-border, @alert-info-text);
}

.alert-warning() {
	.alert-variant(@alert-warning-bg, @alert-warning-border, @alert-warning-text);
}

.alert-danger() {
	.alert-variant(@alert-danger-bg, @alert-danger-border, @alert-danger-text);
}

.badge() {
	display: inline-block;
	min-width: 10px;
	padding: 3px 7px;
	font-size: @font-size-small;
	font-weight: @badge-font-weight;
	color: @badge-color;
	line-height: @badge-line-height;
	vertical-align: baseline;
	white-space: nowrap;
	text-align: center;
	background-color: @badge-bg;
	border-radius: @badge-border-radius;
	// Empty badges collapse automatically (not available in IE8)
	&:empty {
		display: none;
	}
}

.breadcrumb() {
	padding: 8px 15px;
	margin-bottom: @line-height-computed;
	list-style: none;
	background-color: @breadcrumb-bg;
	border-radius: @border-radius-base;
	> li {
		display: inline-block;
		&+li:before {
			content: "@{breadcrumb-separator}\00a0"; // Unicode space added since inline-block means non-collapsing white-space
			padding: 0 5px;
			color: @breadcrumb-color;
		}
	}
	> .active {
		color: @breadcrumb-active-color;
	}
}

.caret() {
	.btn-default & {
		border-top-color: @btn-default-color;
	}
	.btn-primary &,
	.btn-success &,
	.btn-warning &,
	.btn-danger &,
	.btn-info & {
		border-top-color: #fff;
	}
}

.dropup() {
	& .btn-default .caret {
		border-bottom-color: @btn-default-color;
	}
	.btn-primary,
	.btn-success,
	.btn-warning,
	.btn-danger,
	.btn-info {
		.caret {
			border-bottom-color: #fff;
		}
	}
}

.btn-group-vertical() {
	position: relative;
	display: inline-block;
	vertical-align: middle; // match .btn alignment given font-size hack above
	> .btn {
		position: relative;
		float: left;
		// Bring the "active" button to the front
		&:hover,
		&:focus,
		&:active,
		&.active {
			z-index: 2;
		}
		&:focus {
			// Remove focus outline when dropdown JS adds it after closing the menu
			outline: none;
		}
	}
}

.btn-group() {
	position: relative;
	display: inline-block;
	vertical-align: middle;
	> .btn {
		position: relative;
		float: left;
		&:hover, &:focus, &:active, &.active {
			z-index: 2;
		}
		&:focus {
			outline: none;
		}
	}
}

.btn-group() {
	.btn + .btn,
	.btn + .btn-group,
	.btn-group + .btn,
	.btn-group + .btn-group {
		margin-left: -1px;
	}
}

.btn-toolbar() {
	.clearfix();
	.btn-group {
		float: left;
	}
	// Space out series of button groups
	> .btn,
	> .btn-group {
		+ .btn,
		+ .btn-group {
			margin-left: 5px;
		}
	}
}

.btn-group-vertical() {
	> .btn,
	> .btn-group {
		display: block;
		float: none;
		width: 100%;
		max-width: 100%;
	}
	// Clear floats so dropdown menus can be properly placed
	> .btn-group {
		.clearfix();
		> .btn {
			float: none;
		}
	}
	> .btn + .btn,
	> .btn + .btn-group,
	> .btn-group + .btn,
	> .btn-group + .btn-group {
		margin-top: -1px;
		margin-left: 0;
	}
}

.btn-group-justified() {
	display: table;
	width: 100%;
	table-layout: fixed;
	border-collapse: separate;
	.btn {
		float: none;
		display: table-cell;
		width: 1%;
	}
}

.btn() {
	display: inline-block;
	padding: @padding-base-vertical @padding-base-horizontal;
	margin-bottom: 0; // For input.btn
	font-size: @font-size-base;
	font-weight: @btn-font-weight;
	line-height: @line-height-base;
	text-align: center;
	vertical-align: middle;
	cursor: pointer;
	background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
	border: 1px solid transparent;
	border-radius: @border-radius-base;
	white-space: nowrap;
	.user-select(none);
	&:focus {
		.tab-focus();
	}
	&:hover,
	&:focus {
		color: @btn-default-color;
		text-decoration: none;
	}
	&:active,
	&.active {
		outline: 0;
		background-image: none;
		.box-shadow(inset 0 3px 5px rgba(0,0,0,.125));
	}
	&.disabled,
	&[disabled],
	fieldset[disabled] & {
		cursor: not-allowed;
		pointer-events: none; // Future-proof disabling of clicks
		.opacity(.65);
		.box-shadow(none);
	}
}

.btn-default() {
	.button-variant(@btn-default-color, @btn-default-bg, @btn-default-border);
}

.btn-primary() {
	.button-variant(@btn-primary-color, @btn-primary-bg, @btn-primary-border);
}

.btn-warning() {
	.button-variant(@btn-warning-color, @btn-warning-bg, @btn-warning-border);
}

.btn-danger() {
	.button-variant(@btn-danger-color, @btn-danger-bg, @btn-danger-border);
}

.btn-success() {
	.button-variant(@btn-success-color, @btn-success-bg, @btn-success-border);
}

.btn-info() {
	.button-variant(@btn-info-color, @btn-info-bg, @btn-info-border);
}

.btn-link() {
	color: @link-color;
	font-weight: normal;
	cursor: pointer;
	border-radius: 0;
	&,
	&:active,
	&[disabled],
	fieldset[disabled] & {
		background-color: transparent;
		.box-shadow(none);
	}
	&,
	&:hover,
	&:focus,
	&:active {
		border-color: transparent;
	}
	&:hover,
	&:focus {
		color: @link-hover-color;
		text-decoration: underline;
		background-color: transparent;
	}
	&[disabled],
	fieldset[disabled] & {
		&:hover,
		&:focus {
			color: @btn-link-disabled-color;
			text-decoration: none;
		}
	}
}

.btn-lg() {
	// line-height: ensure even-numbered height of button next to large input
	.button-size(@padding-large-vertical, @padding-large-horizontal, @font-size-large, @line-height-large, @border-radius-large);
}

.btn-xs() {
	// line-height: ensure proper height of button next to small input
	.button-size(@padding-small-vertical, @padding-small-horizontal, @font-size-small, @line-height-small, @border-radius-small);
}

.btn-sm() { .button-size(@padding-small-vertical, @padding-small-horizontal, @font-size-small, @line-height-small, @border-radius-small);
}

.btn-xs() {
	padding: 1px 5px;
}

.btn-block() {
	display: block;
	width: 100%;
	padding-left: 0;
	padding-right: 0;
}

.carousel() {
	position: relative;
}

.carousel-inner() {
	position: relative;
	overflow: hidden;
	width: 100%;
	> .item {
		display: none;
		position: relative;
		.transition(.6s ease-in-out left);
		// Account for jankitude on images
		> img,
		> a > img {
			.img-responsive();
			line-height: 1;
		}
	}
	> .active,
	> .next,
	> .prev {
		display: block;
	}
	> .active {
		left: 0;
	}
	> .next,
	> .prev {
		position: absolute;
		top: 0;
		width: 100%;
	}
	> .next {
		left: 100%;
	}
	> .prev {
		left: -100%;
	}
	> .next.left,
	> .prev.right {
		left: 0;
	}
	> .active.left {
		left: -100%;
	}
	> .active.right {
		left: 100%;
	}
}

.carousel-control() {
	position: absolute;
	top: 0;
	left: 0;
	bottom: 0;
	width: @carousel-control-width;
	.opacity(@carousel-control-opacity);
	font-size: @carousel-control-font-size;
	color: @carousel-control-color;
	text-align: center;
	text-shadow: @carousel-text-shadow;
	// We can't have this transition here because webkit cancels the carousel
	// animation if you trip this while in the middle of another animation.
	// Set gradients for backgrounds
	&.left {
		#gradient > .horizontal(@start-color: rgba(0,0,0,.5), @end-color: rgba(0,0,0,.0001));
	}
	&.right {
		left: auto;
		right: 0;
		#gradient > .horizontal(@start-color: rgba(0,0,0,.0001), @end-color: rgba(0,0,0,.5));
	}
	// Hover/focus state
	&:hover,
	&:focus {
		color: @carousel-control-color;
		text-decoration: none;
		.opacity(.9);
	}
	// Toggles
	.icon-prev,
	.icon-next,
	.glyphicon-chevron-left,
	.glyphicon-chevron-right {
		position: absolute;
		top: 50%;
		left: 50%;
		z-index: 5;
		display: inline-block;
	}
	.icon-prev,
	.icon-next {
		width: 20px;
		height: 20px;
		margin-top: -10px;
		margin-left: -10px;
		font-family: serif;
	}
	.icon-prev {
		&:before {
			content: '\2039';// SINGLE LEFT-POINTING ANGLE QUOTATION MARK (U+2039)
		}
	}
	.icon-next {
		&:before {
			content: '\203a';// SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (U+203A)
		}
	}
}

.carousel-indicators() {
	position: absolute;
	bottom: 10px;
	left: 50%;
	z-index: 15;
	width: 60%;
	margin-left: -30%;
	padding-left: 0;
	list-style: none;
	text-align: center;
	li {
		display: inline-block;
		width: 10px;
		height: 10px;
		margin: 1px;
		text-indent: -999px;
		border: 1px solid @carousel-indicator-border-color;
		border-radius: 10px;
		cursor: pointer;
	}
	.active {
		margin: 0;
		width: 12px;
		height: 12px;
		background-color: @carousel-indicator-active-bg;
	}
}

.carousel-caption() {
	position: absolute;
	left: 15%;
	right: 15%;
	bottom: 20px;
	z-index: 10;
	padding-top: 20px;
	padding-bottom: 20px;
	color: @carousel-caption-color;
	text-align: center;
	text-shadow: @carousel-text-shadow;
	& .btn {
		text-shadow: none; // No shadow for button elements in carousel-caption
	}
}

.carousel-control() {
	@media screen and (min-width: @screen-sm) {
		.glyphicons-chevron-left,
		.glyphicons-chevron-right
    .icon-prev,
		.icon-next {
			width: 30px;
			height: 30px;
			margin-top: -15px;
			margin-left: -15px;
			font-size: 30px;
		}
	}
}

.carousel-caption() {
	@media screen and (min-width: @screen-sm) {
		left: 20%;
		right: 20%;
		padding-bottom: 30px;
	}
}

.carousel-indicators() {
	@media screen and (min-width: @screen-sm) {
		bottom: 20px;
	}
}

.close() {
	float: right;
	font-size: (@font-size-base * 1.5);
	font-weight: @close-font-weight;
	line-height: 1;
	color: @close-color;
	text-shadow: @close-text-shadow;
	.opacity(.2);
	&:hover,
	&:focus {
		color: @close-color;
		text-decoration: none;
		cursor: pointer;
		.opacity(.5);
	}
	// Additional properties for button version
	// iOS requires the button element instead of an anchor tag.
	// If you want the anchor version, it requires `href="#"`.
	button& {
		padding: 0;
		cursor: pointer;
		background: transparent;
		border: 0;
		-webkit-appearance: none;
	}
}

.pre-scrollable() {
	max-height: @pre-scrollable-max-height;
	overflow-y: scroll;
}

.fade() {
	opacity: 0;
	.transition(opacity .15s linear);
	&.in {
		opacity: 1;
	}
}

.collapse() {
	display: none;
	&.in {
		display: block;
	}
}

.collapsing() {
	position: relative;
	height: 0;
	overflow: hidden;
	.transition(height .35s ease);
}

.caret() {
	display: inline-block;
	width: 0;
	height: 0;
	margin-left: 2px;
	vertical-align: middle;
	border-top: @caret-width-base solid @dropdown-caret-color;
	border-right: @caret-width-base solid transparent;
	border-left: @caret-width-base solid transparent;
	// Firefox fix for https://github.com/twbs/bootstrap/issues/9538. Once fixed,
	// we can just straight up remove this.
	border-bottom: 0 dotted;
	content: "";
}

.dropdown() {
	position: relative;
}

.dropdown-menu() {
	position: absolute;
	top: 100%;
	left: 0;
	z-index: @zindex-dropdown;
	display: none; // none by default, but block on "open" of the menu
	float: left;
	min-width: 160px;
	padding: 5px 0;
	margin: 2px 0 0; // override default ul
	list-style: none;
	font-size: @font-size-base;
	background-color: @dropdown-bg;
	border: 1px solid @dropdown-fallback-border; // IE8 fallback
	border: 1px solid @dropdown-border;
	border-radius: @border-radius-base;
	.box-shadow(0 6px 12px rgba(0,0,0,.175));
	background-clip: padding-box;
	// Aligns the dropdown menu to right
	&.pull-right {
		right: 0;
		left: auto;
	}
	// Dividers (basically an hr) within the dropdown
	.divider {
		.nav-divider(@dropdown-divider-bg);
	}
	// Links within the dropdown menu
	> li > a {
		display: block;
		padding: 3px 20px;
		clear: both;
		font-weight: normal;
		line-height: @line-height-base;
		color: @dropdown-link-color;
		white-space: nowrap; // prevent links from randomly breaking onto new lines
	}
}

.open() {
	// Show the menu
	> .dropdown-menu {
		display: block;
	}
	// Remove the outline when :focus is triggered
	> a {
		outline: 0;
	}
}

.dropdown-header() {
	display: block;
	padding: 3px 20px;
	font-size: @font-size-small;
	line-height: @line-height-base;
	color: @dropdown-header-color;
}

.dropdown-backdrop() {
	position: fixed;
	left: 0;
	right: 0;
	bottom: 0;
	top: 0;
	z-index: @zindex-dropdown - 10;
}

.navbar-right() {
	@media (min-width: @grid-float-breakpoint) {
		.dropdown-menu {
			.pull-right > .dropdown-menu();
		}
	}
}

.dropup() {
	@media (min-width: @grid-float-breakpoint) {
		.dropdown-menu { .pull-right > .dropdown-menu();
		}
	}
}

.form-control() {
	.placeholder();
}

.form-control() {
	display: block;
	width: 100%;
	height: @input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
	padding: @padding-base-vertical @padding-base-horizontal;
	font-size: @font-size-base;
	line-height: @line-height-base;
	color: @input-color;
	vertical-align: middle;
	background-color: @input-bg;
	background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
	border: 1px solid @input-border;
	border-radius: @input-border-radius;
	.box-shadow(inset 0 1px 1px rgba(0,0,0,.075));
	.transition(~"border-color ease-in-out .15s, box-shadow ease-in-out .15s");
	// Customize the `:focus` state to imitate native WebKit styles.
	.form-control-focus();
	// Disabled and read-only inputs
	// Note: HTML5 says that controls under a fieldset > legend:first-child won't
	// be disabled if the fieldset is disabled. Due to implementation difficulty,
	// we don't honor that edge case; we style them as disabled anyway.
	&[disabled],
	&[readonly],
	fieldset[disabled] & {
		cursor: not-allowed;
		background-color: @input-bg-disabled;
	}
	// Reset height for `textarea`s
	textarea& {
		height: auto;
	}
}

.form-group() {
	margin-bottom: 15px;
}

.checkbox() {
	display: block;
	min-height: @line-height-computed; // clear the floating input if there is no label text
	margin-top: 10px;
	margin-bottom: 10px;
	padding-left: 20px;
	vertical-align: middle;
	label {
		display: inline;
		margin-bottom: 0;
		font-weight: normal;
		cursor: pointer;
	}
}

.radio() {
	display: block;
	min-height: @line-height-computed;
	margin-top: 10px;
	margin-bottom: 10px;
	padding-left: 20px;
	vertical-align: middle;
	label {
		display: inline;
		margin-bottom: 0;
		font-weight: normal;
		cursor: pointer;
	}
}

.checkbox-inline() {
	display: inline-block;
	padding-left: 20px;
	margin-bottom: 0;
	vertical-align: middle;
	font-weight: normal;
	cursor: pointer;
}

.radio-inline() {
	display: inline-block;
	padding-left: 20px;
	margin-bottom: 0;
	vertical-align: middle;
	font-weight: normal;
	cursor: pointer;
}

.checkbox-inline() {
	&[disabled],
	fieldset[disabled] & {
		cursor: not-allowed;
	}
}

.radio() {
	&[disabled], fieldset[disabled] & {
		cursor: not-allowed;
	}
}

.radio-inline() {
	&[disabled], fieldset[disabled] & {
		cursor: not-allowed;
	}
}

.checkbox() {
	&[disabled], fieldset[disabled] & {
		cursor: not-allowed;
	}
}

.input-sm() {
	.input-size(@input-height-small, @padding-small-vertical, @padding-small-horizontal, @font-size-small, @line-height-small, @border-radius-small);
}

.input-lg() {
	.input-size(@input-height-large, @padding-large-vertical, @padding-large-horizontal, @font-size-large, @line-height-large, @border-radius-large);
}

.has-warning() {
	.form-control-validation(@state-warning-text, @state-warning-text, @state-warning-bg);
}

.has-error() {
	.form-control-validation(@state-danger-text, @state-danger-text, @state-danger-bg);
}

.has-success() {
	.form-control-validation(@state-success-text, @state-success-text, @state-success-bg);
}

.form-control-static() {
	margin-bottom: 0; // Remove default margin from `p`
	padding-top: (@padding-base-vertical + 1);
}

.help-block() {
	display: block; // account for any element using help-block
	margin-top: 5px;
	margin-bottom: 10px;
	color: lighten(@text-color, 25%); // lighten the text some for contrast
}

.form-inline() {
	// Kick in the inline
	@media (min-width: @screen-sm) {
		// Inline-block all the things for "inline"
		.form-group {
			display: inline-block;
			margin-bottom: 0;
			vertical-align: middle;
		}

		// In navbar-form, allow folks to *not* use `.form-group`
		.form-control {
			display: inline-block;
		}

		// Remove default margin on radios/checkboxes that were used for stacking, and
		// then undo the floating of radios and checkboxes to match (which also avoids
		// a bug in WebKit: https://github.com/twbs/bootstrap/issues/1969).
		.radio,
		.checkbox {
			display: inline-block;
			margin-top: 0;
			margin-bottom: 0;
			padding-left: 0;
		}

		.radio input[type="radio"],
		.checkbox input[type="checkbox"] {
			float: none;
			margin-left: 0;
		}
	}
}

.form-horizontal() {
	// Consistent vertical alignment of labels, radios, and checkboxes
	.control-label,
	.radio,
	.checkbox,
	.radio-inline,
	.checkbox-inline {
		margin-top: 0;
		margin-bottom: 0;
		padding-top: (@padding-base-vertical + 1); // Default padding plus a border
	}
	// Make form groups behave like rows
	.form-group {
		.make-row();
	}
	// Only right align form labels here when the columns stop stacking
	@media (min-width: @screen-sm) {
		.control-label {
			text-align: right;
		}
	}
}

.glyphicon() {
	position: relative;
	top: 1px;
	display: inline-block;
	font-family: 'Glyphicons Halflings';
	font-style: normal;
	font-weight: normal;
	line-height: 1;
	-webkit-font-smoothing: antialiased;
	&:empty {
		width: 1em;
	}
}

.glyphicon-asterisk() {
	&:before {
		content: "\2a";
	}
}

.glyphicon-plus() {
	&:before {
		content: "\2b";
	}
}

.glyphicon-euro() {
	&:before {
		content: "\20ac";
	}
}

.glyphicon-minus() {
	&:before {
		content: "\2212";
	}
}

.glyphicon-cloud() {
	&:before {
		content: "\2601";
	}
}

.glyphicon-envelope() {
	&:before {
		content: "\2709";
	}
}

.glyphicon-pencil() {
	&:before {
		content: "\270f";
	}
}

.glyphicon-glass() {
	&:before {
		content: "\e001";
	}
}

.glyphicon-music() {
	&:before {
		content: "\e002";
	}
}

.glyphicon-search() {
	&:before {
		content: "\e003";
	}
}

.glyphicon-heart() {
	&:before {
		content: "\e005";
	}
}

.glyphicon-star() {
	&:before {
		content: "\e006";
	}
}

.glyphicon-star-empty() {
	&:before {
		content: "\e007";
	}
}

.glyphicon-user() {
	&:before {
		content: "\e008";
	}
}

.glyphicon-film() {
	&:before {
		content: "\e009";
	}
}

.glyphicon-th-large() {
	&:before {
		content: "\e010";
	}
}

.glyphicon-th() {
	&:before {
		content: "\e011";
	}
}

.glyphicon-th-list() {
	&:before {
		content: "\e012";
	}
}

.glyphicon-ok() {
	&:before {
		content: "\e013";
	}
}

.glyphicon-remove() {
	&:before {
		content: "\e014";
	}
}

.glyphicon-zoom-in() {
	&:before {
		content: "\e015";
	}
}

.glyphicon-zoom-out() {
	&:before {
		content: "\e016";
	}
}

.glyphicon-off() {
	&:before {
		content: "\e017";
	}
}

.glyphicon-signal() {
	&:before {
		content: "\e018";
	}
}

.glyphicon-cog() {
	&:before {
		content: "\e019";
	}
}

.glyphicon-trash() {
	&:before {
		content: "\e020";
	}
}

.glyphicon-home() {
	&:before {
		content: "\e021";
	}
}

.glyphicon-file() {
	&:before {
		content: "\e022";
	}
}

.glyphicon-time() {
	&:before {
		content: "\e023";
	}
}

.glyphicon-road() {
	&:before {
		content: "\e024";
	}
}

.glyphicon-download-alt() {
	&:before {
		content: "\e025";
	}
}

.glyphicon-download() {
	&:before {
		content: "\e026";
	}
}

.glyphicon-upload() {
	&:before {
		content: "\e027";
	}
}

.glyphicon-inbox() {
	&:before {
		content: "\e028";
	}
}

.glyphicon-play-circle() {
	&:before {
		content: "\e029";
	}
}

.glyphicon-repeat() {
	&:before {
		content: "\e030";
	}
}

.glyphicon-refresh() {
	&:before {
		content: "\e031";
	}
}

.glyphicon-list-alt() {
	&:before {
		content: "\e032";
	}
}

.glyphicon-flag() {
	&:before {
		content: "\e034";
	}
}

.glyphicon-headphones() {
	&:before {
		content: "\e035";
	}
}

.glyphicon-volume-off() {
	&:before {
		content: "\e036";
	}
}

.glyphicon-volume-down() {
	&:before {
		content: "\e037";
	}
}

.glyphicon-volume-up() {
	&:before {
		content: "\e038";
	}
}

.glyphicon-qrcode() {
	&:before {
		content: "\e039";
	}
}

.glyphicon-barcode() {
	&:before {
		content: "\e040";
	}
}

.glyphicon-tag() {
	&:before {
		content: "\e041";
	}
}

.glyphicon-tags() {
	&:before {
		content: "\e042";
	}
}

.glyphicon-book() {
	&:before {
		content: "\e043";
	}
}

.glyphicon-print() {
	&:before {
		content: "\e045";
	}
}

.glyphicon-font() {
	&:before {
		content: "\e047";
	}
}

.glyphicon-bold() {
	&:before {
		content: "\e048";
	}
}

.glyphicon-italic() {
	&:before {
		content: "\e049";
	}
}

.glyphicon-text-height() {
	&:before {
		content: "\e050";
	}
}

.glyphicon-text-width() {
	&:before {
		content: "\e051";
	}
}

.glyphicon-align-left() {
	&:before {
		content: "\e052";
	}
}

.glyphicon-align-center() {
	&:before {
		content: "\e053";
	}
}

.glyphicon-align-right() {
	&:before {
		content: "\e054";
	}
}

.glyphicon-align-justify() {
	&:before {
		content: "\e055";
	}
}

.glyphicon-list() {
	&:before {
		content: "\e056";
	}
}

.glyphicon-indent-left() {
	&:before {
		content: "\e057";
	}
}

.glyphicon-indent-right() {
	&:before {
		content: "\e058";
	}
}

.glyphicon-facetime-video() {
	&:before {
		content: "\e059";
	}
}

.glyphicon-picture() {
	&:before {
		content: "\e060";
	}
}

.glyphicon-map-marker() {
	&:before {
		content: "\e062";
	}
}

.glyphicon-adjust() {
	&:before {
		content: "\e063";
	}
}

.glyphicon-tint() {
	&:before {
		content: "\e064";
	}
}

.glyphicon-edit() {
	&:before {
		content: "\e065";
	}
}

.glyphicon-share() {
	&:before {
		content: "\e066";
	}
}

.glyphicon-check() {
	&:before {
		content: "\e067";
	}
}

.glyphicon-move() {
	&:before {
		content: "\e068";
	}
}

.glyphicon-step-backward() {
	&:before {
		content: "\e069";
	}
}

.glyphicon-fast-backward() {
	&:before {
		content: "\e070";
	}
}

.glyphicon-backward() {
	&:before {
		content: "\e071";
	}
}

.glyphicon-play() {
	&:before {
		content: "\e072";
	}
}

.glyphicon-pause() {
	&:before {
		content: "\e073";
	}
}

.glyphicon-stop() {
	&:before {
		content: "\e074";
	}
}

.glyphicon-forward() {
	&:before {
		content: "\e075";
	}
}

.glyphicon-fast-forward() {
	&:before {
		content: "\e076";
	}
}

.glyphicon-step-forward() {
	&:before {
		content: "\e077";
	}
}

.glyphicon-eject() {
	&:before {
		content: "\e078";
	}
}

.glyphicon-chevron-left() {
	&:before {
		content: "\e079";
	}
}

.glyphicon-chevron-right() {
	&:before {
		content: "\e080";
	}
}

.glyphicon-plus-sign() {
	&:before {
		content: "\e081";
	}
}

.glyphicon-minus-sign() {
	&:before {
		content: "\e082";
	}
}

.glyphicon-remove-sign() {
	&:before {
		content: "\e083";
	}
}

.glyphicon-ok-sign() {
	&:before {
		content: "\e084";
	}
}

.glyphicon-question-sign() {
	&:before {
		content: "\e085";
	}
}

.glyphicon-info-sign() {
	&:before {
		content: "\e086";
	}
}

.glyphicon-screenshot() {
	&:before {
		content: "\e087";
	}
}

.glyphicon-remove-circle() {
	&:before {
		content: "\e088";
	}
}

.glyphicon-ok-circle() {
	&:before {
		content: "\e089";
	}
}

.glyphicon-ban-circle() {
	&:before {
		content: "\e090";
	}
}

.glyphicon-arrow-left() {
	&:before {
		content: "\e091";
	}
}

.glyphicon-arrow-right() {
	&:before {
		content: "\e092";
	}
}

.glyphicon-arrow-up() {
	&:before {
		content: "\e093";
	}
}

.glyphicon-arrow-down() {
	&:before {
		content: "\e094";
	}
}

.glyphicon-share-alt() {
	&:before {
		content: "\e095";
	}
}

.glyphicon-resize-full() {
	&:before {
		content: "\e096";
	}
}

.glyphicon-resize-small() {
	&:before {
		content: "\e097";
	}
}

.glyphicon-exclamation-sign() {
	&:before {
		content: "\e101";
	}
}

.glyphicon-gift() {
	&:before {
		content: "\e102";
	}
}

.glyphicon-leaf() {
	&:before {
		content: "\e103";
	}
}

.glyphicon-eye-open() {
	&:before {
		content: "\e105";
	}
}

.glyphicon-eye-close() {
	&:before {
		content: "\e106";
	}
}

.glyphicon-warning-sign() {
	&:before {
		content: "\e107";
	}
}

.glyphicon-plane() {
	&:before {
		content: "\e108";
	}
}

.glyphicon-random() {
	&:before {
		content: "\e110";
	}
}

.glyphicon-comment() {
	&:before {
		content: "\e111";
	}
}

.glyphicon-magnet() {
	&:before {
		content: "\e112";
	}
}

.glyphicon-chevron-up() {
	&:before {
		content: "\e113";
	}
}

.glyphicon-chevron-down() {
	&:before {
		content: "\e114";
	}
}

.glyphicon-retweet() {
	&:before {
		content: "\e115";
	}
}

.glyphicon-shopping-cart() {
	&:before {
		content: "\e116";
	}
}

.glyphicon-folder-close() {
	&:before {
		content: "\e117";
	}
}

.glyphicon-folder-open() {
	&:before {
		content: "\e118";
	}
}

.glyphicon-resize-vertical() {
	&:before {
		content: "\e119";
	}
}

.glyphicon-resize-horizontal() {
	&:before {
		content: "\e120";
	}
}

.glyphicon-hdd() {
	&:before {
		content: "\e121";
	}
}

.glyphicon-bullhorn() {
	&:before {
		content: "\e122";
	}
}

.glyphicon-certificate() {
	&:before {
		content: "\e124";
	}
}

.glyphicon-thumbs-up() {
	&:before {
		content: "\e125";
	}
}

.glyphicon-thumbs-down() {
	&:before {
		content: "\e126";
	}
}

.glyphicon-hand-right() {
	&:before {
		content: "\e127";
	}
}

.glyphicon-hand-left() {
	&:before {
		content: "\e128";
	}
}

.glyphicon-hand-up() {
	&:before {
		content: "\e129";
	}
}

.glyphicon-hand-down() {
	&:before {
		content: "\e130";
	}
}

.glyphicon-circle-arrow-right() {
	&:before {
		content: "\e131";
	}
}

.glyphicon-circle-arrow-left() {
	&:before {
		content: "\e132";
	}
}

.glyphicon-circle-arrow-up() {
	&:before {
		content: "\e133";
	}
}

.glyphicon-circle-arrow-down() {
	&:before {
		content: "\e134";
	}
}

.glyphicon-globe() {
	&:before {
		content: "\e135";
	}
}

.glyphicon-tasks() {
	&:before {
		content: "\e137";
	}
}

.glyphicon-filter() {
	&:before {
		content: "\e138";
	}
}

.glyphicon-fullscreen() {
	&:before {
		content: "\e140";
	}
}

.glyphicon-dashboard() {
	&:before {
		content: "\e141";
	}
}

.glyphicon-heart-empty() {
	&:before {
		content: "\e143";
	}
}

.glyphicon-link() {
	&:before {
		content: "\e144";
	}
}

.glyphicon-phone() {
	&:before {
		content: "\e145";
	}
}

.glyphicon-usd() {
	&:before {
		content: "\e148";
	}
}

.glyphicon-gbp() {
	&:before {
		content: "\e149";
	}
}

.glyphicon-sort() {
	&:before {
		content: "\e150";
	}
}

.glyphicon-sort-by-alphabet() {
	&:before {
		content: "\e151";
	}
}

.glyphicon-sort-by-alphabet-alt() {
	&:before {
		content: "\e152";
	}
}

.glyphicon-sort-by-order() {
	&:before {
		content: "\e153";
	}
}

.glyphicon-sort-by-order-alt() {
	&:before {
		content: "\e154";
	}
}

.glyphicon-sort-by-attributes() {
	&:before {
		content: "\e155";
	}
}

.glyphicon-sort-by-attributes-alt() {
	&:before {
		content: "\e156";
	}
}

.glyphicon-unchecked() {
	&:before {
		content: "\e157";
	}
}

.glyphicon-expand() {
	&:before {
		content: "\e158";
	}
}

.glyphicon-collapse-down() {
	&:before {
		content: "\e159";
	}
}

.glyphicon-collapse-up() {
	&:before {
		content: "\e160";
	}
}

.glyphicon-log-in() {
	&:before {
		content: "\e161";
	}
}

.glyphicon-flash() {
	&:before {
		content: "\e162";
	}
}

.glyphicon-log-out() {
	&:before {
		content: "\e163";
	}
}

.glyphicon-new-window() {
	&:before {
		content: "\e164";
	}
}

.glyphicon-record() {
	&:before {
		content: "\e165";
	}
}

.glyphicon-save() {
	&:before {
		content: "\e166";
	}
}

.glyphicon-open() {
	&:before {
		content: "\e167";
	}
}

.glyphicon-saved() {
	&:before {
		content: "\e168";
	}
}

.glyphicon-import() {
	&:before {
		content: "\e169";
	}
}

.glyphicon-export() {
	&:before {
		content: "\e170";
	}
}

.glyphicon-send() {
	&:before {
		content: "\e171";
	}
}

.glyphicon-floppy-disk() {
	&:before {
		content: "\e172";
	}
}

.glyphicon-floppy-saved() {
	&:before {
		content: "\e173";
	}
}

.glyphicon-floppy-remove() {
	&:before {
		content: "\e174";
	}
}

.glyphicon-floppy-save() {
	&:before {
		content: "\e175";
	}
}

.glyphicon-floppy-open() {
	&:before {
		content: "\e176";
	}
}

.glyphicon-credit-card() {
	&:before {
		content: "\e177";
	}
}

.glyphicon-transfer() {
	&:before {
		content: "\e178";
	}
}

.glyphicon-cutlery() {
	&:before {
		content: "\e179";
	}
}

.glyphicon-header() {
	&:before {
		content: "\e180";
	}
}

.glyphicon-compressed() {
	&:before {
		content: "\e181";
	}
}

.glyphicon-earphone() {
	&:before {
		content: "\e182";
	}
}

.glyphicon-phone-alt() {
	&:before {
		content: "\e183";
	}
}

.glyphicon-tower() {
	&:before {
		content: "\e184";
	}
}

.glyphicon-stats() {
	&:before {
		content: "\e185";
	}
}

.glyphicon-sd-video() {
	&:before {
		content: "\e186";
	}
}

.glyphicon-hd-video() {
	&:before {
		content: "\e187";
	}
}

.glyphicon-subtitles() {
	&:before {
		content: "\e188";
	}
}

.glyphicon-sound-stereo() {
	&:before {
		content: "\e189";
	}
}

.glyphicon-sound-dolby() {
	&:before {
		content: "\e190";
	}
}

.glyphicon-sound-5-1() {
	&:before {
		content: "\e191";
	}
}

.glyphicon-sound-6-1() {
	&:before {
		content: "\e192";
	}
}

.glyphicon-sound-7-1() {
	&:before {
		content: "\e193";
	}
}

.glyphicon-copyright-mark() {
	&:before {
		content: "\e194";
	}
}

.glyphicon-registration-mark() {
	&:before {
		content: "\e195";
	}
}

.glyphicon-cloud-download() {
	&:before {
		content: "\e197";
	}
}

.glyphicon-cloud-upload() {
	&:before {
		content: "\e198";
	}
}

.glyphicon-tree-conifer() {
	&:before {
		content: "\e199";
	}
}

.glyphicon-tree-deciduous() {
	&:before {
		content: "\e200";
	}
}

.glyphicon-briefcase() {
	&:before {
		content: "\1f4bc";
	}
}

.glyphicon-calendar() {
	&:before {
		content: "\1f4c5";
	}
}

.glyphicon-pushpin() {
	&:before {
		content: "\1f4cc";
	}
}

.glyphicon-paperclip() {
	&:before {
		content: "\1f4ce";
	}
}

.glyphicon-camera() {
	&:before {
		content: "\1f4f7";
	}
}

.glyphicon-lock() {
	&:before {
		content: "\1f512";
	}
}

.glyphicon-bell() {
	&:before {
		content: "\1f514";
	}
}

.glyphicon-bookmark() {
	&:before {
		content: "\1f516";
	}
}

.glyphicon-fire() {
	&:before {
		content: "\1f525";
	}
}

.glyphicon-wrench() {
	&:before {
		content: "\1f527";
	}
}

.container() {
	.container-fixed();
}

.row() {
	.make-row();
}

.col-lg-12() {
	position: relative;
	// Prevent columns from collapsing when empty
	min-height: 1px;
	// Inner gutter via padding
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-xs-1() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-xs-2() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-xs-3() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-xs-4() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-xs-5() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-xs-6() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-xs-7() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-xs-8() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-xs-9() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-xs-10() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-xs-11() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-xs-12() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-sm-1() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-sm-2() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-sm-3() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-sm-4() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-sm-5() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-sm-6() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-sm-7() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-sm-8() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-sm-9() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-sm-10() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-sm-11() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-sm-12() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-md-1() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-md-2() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-md-3() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-md-4() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-md-5() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-md-6() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-md-7() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-md-8() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-md-9() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-md-10() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-md-11() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-md-12() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-lg-1() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-lg-2() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-lg-3() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-lg-4() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-lg-5() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-lg-6() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-lg-7() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-lg-8() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-lg-9() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-lg-10() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-lg-11() {
	position: relative;
	min-height: 1px;
	padding-left: (@grid-gutter-width / 2);
	padding-right: (@grid-gutter-width / 2);
}

.col-xs-11() {
	float: left;
}

.col-xs-1() {
	float: left;
}

.col-xs-2() {
	float: left;
}

.col-xs-3() {
	float: left;
}

.col-xs-4() {
	float: left;
}

.col-xs-5() {
	float: left;
}

.col-xs-6() {
	float: left;
}

.col-xs-7() {
	float: left;
}

.col-xs-8() {
	float: left;
}

.col-xs-9() {
	float: left;
}

.col-xs-10() {
	float: left;
}

.col-xs-1() {
	width: percentage((1 / @grid-columns));
}

.col-xs-2() {
	width: percentage((2 / @grid-columns));
}

.col-xs-3() {
	width: percentage((3 / @grid-columns));
}

.col-xs-4() {
	width: percentage((4 / @grid-columns));
}

.col-xs-5() {
	width: percentage((5 / @grid-columns));
}

.col-xs-6() {
	width: percentage((6 / @grid-columns));
}

.col-xs-7() {
	width: percentage((7 / @grid-columns));
}

.col-xs-8() {
	width: percentage((8 / @grid-columns));
}

.col-xs-9() {
	width: percentage((9 / @grid-columns));
}

.col-xs-10() {
	width: percentage((10/ @grid-columns));
}

.col-xs-11() {
	width: percentage((11/ @grid-columns));
}

.col-xs-12() {
	width: 100%;
}

.container() {
	@media (min-width: @screen-sm) {
		width: @container-sm;
	}
}

.col-sm-11() {
	@media (min-width: @screen-sm) {
		float: left;
	}
}

.col-sm-1() {
	@media (min-width: @screen-sm) {
		float: left;
	}
}

.col-sm-2() {
	@media (min-width: @screen-sm) {
		float: left;
	}
}

.col-sm-3() {
	@media (min-width: @screen-sm) {
		float: left;
	}
}

.col-sm-4() {
	@media (min-width: @screen-sm) {
		float: left;
	}
}

.col-sm-5() {
	@media (min-width: @screen-sm) {
		float: left;
	}
}

.col-sm-6() {
	@media (min-width: @screen-sm) {
		float: left;
	}
}

.col-sm-7() {
	@media (min-width: @screen-sm) {
		float: left;
	}
}

.col-sm-8() {
	@media (min-width: @screen-sm) {
		float: left;
	}
}

.col-sm-9() {
	@media (min-width: @screen-sm) {
		float: left;
	}
}

.col-sm-10() {
	@media (min-width: @screen-sm) {
		float: left;
	}
}

.col-sm-1() {
	width: percentage((1 / @grid-columns));
}

.col-sm-2() {
	width: percentage((2 / @grid-columns));
}

.col-sm-3() {
	width: percentage((3 / @grid-columns));
}

.col-sm-4() {
	width: percentage((4 / @grid-columns));
}

.col-sm-5() {
	width: percentage((5 / @grid-columns));
}

.col-sm-6() {
	width: percentage((6 / @grid-columns));
}

.col-sm-7() {
	width: percentage((7 / @grid-columns));
}

.col-sm-8() {
	width: percentage((8 / @grid-columns));
}

.col-sm-9() {
	width: percentage((9 / @grid-columns));
}

.col-sm-10() {
	width: percentage((10/ @grid-columns));
}

.col-sm-11() {
	width: percentage((11/ @grid-columns));
}

.col-sm-12() {
	width: 100%;
}

.col-sm-push-1() {
	left: percentage((1 / @grid-columns));
}

.col-sm-push-2() {
	left: percentage((2 / @grid-columns));
}

.col-sm-push-3() {
	left: percentage((3 / @grid-columns));
}

.col-sm-push-4() {
	left: percentage((4 / @grid-columns));
}

.col-sm-push-5() {
	left: percentage((5 / @grid-columns));
}

.col-sm-push-6() {
	left: percentage((6 / @grid-columns));
}

.col-sm-push-7() {
	left: percentage((7 / @grid-columns));
}

.col-sm-push-8() {
	left: percentage((8 / @grid-columns));
}

.col-sm-push-9() {
	left: percentage((9 / @grid-columns));
}

.col-sm-push-10() {
	left: percentage((10/ @grid-columns));
}

.col-sm-push-11() {
	left: percentage((11/ @grid-columns));
}

.col-sm-pull-1() {
	right: percentage((1 / @grid-columns));
}

.col-sm-pull-2() {
	right: percentage((2 / @grid-columns));
}

.col-sm-pull-3() {
	right: percentage((3 / @grid-columns));
}

.col-sm-pull-4() {
	right: percentage((4 / @grid-columns));
}

.col-sm-pull-5() {
	right: percentage((5 / @grid-columns));
}

.col-sm-pull-6() {
	right: percentage((6 / @grid-columns));
}

.col-sm-pull-7() {
	right: percentage((7 / @grid-columns));
}

.col-sm-pull-8() {
	right: percentage((8 / @grid-columns));
}

.col-sm-pull-9() {
	right: percentage((9 / @grid-columns));
}

.col-sm-pull-10() {
	right: percentage((10/ @grid-columns));
}

.col-sm-pull-11() {
	right: percentage((11/ @grid-columns));
}

.col-sm-offset-1() {
	margin-left: percentage((1 / @grid-columns));
}

.col-sm-offset-2() {
	margin-left: percentage((2 / @grid-columns));
}

.col-sm-offset-3() {
	margin-left: percentage((3 / @grid-columns));
}

.col-sm-offset-4() {
	margin-left: percentage((4 / @grid-columns));
}

.col-sm-offset-5() {
	margin-left: percentage((5 / @grid-columns));
}

.col-sm-offset-6() {
	margin-left: percentage((6 / @grid-columns));
}

.col-sm-offset-7() {
	margin-left: percentage((7 / @grid-columns));
}

.col-sm-offset-8() {
	margin-left: percentage((8 / @grid-columns));
}

.col-sm-offset-9() {
	margin-left: percentage((9 / @grid-columns));
}

.col-sm-offset-10() {
	margin-left: percentage((10/ @grid-columns));
}

.col-sm-offset-11() {
	margin-left: percentage((11/ @grid-columns));
}

.container() {
	@media (min-width: @screen-md) {
		width: @container-md;
	}
}

.col-md-11() {
	@media (min-width: @screen-md) {
		float: left;
	}
}

.col-md-1() {
	@media (min-width: @screen-md) {
		float: left;
	}
}

.col-md-2() {
	@media (min-width: @screen-md) {
		float: left;
	}
}

.col-md-3() {
	@media (min-width: @screen-md) {
		float: left;
	}
}

.col-md-4() {
	@media (min-width: @screen-md) {
		float: left;
	}
}

.col-md-5() {
	@media (min-width: @screen-md) {
		float: left;
	}
}

.col-md-6() {
	@media (min-width: @screen-md) {
		float: left;
	}
}

.col-md-7() {
	@media (min-width: @screen-md) {
		float: left;
	}
}

.col-md-8() {
	@media (min-width: @screen-md) {
		float: left;
	}
}

.col-md-9() {
	@media (min-width: @screen-md) {
		float: left;
	}
}

.col-md-10() {
	@media (min-width: @screen-md) {
		float: left;
	}
}

.col-md-1() {
	width: percentage((1 / @grid-columns));
}

.col-md-2() {
	width: percentage((2 / @grid-columns));
}

.col-md-3() {
	width: percentage((3 / @grid-columns));
}

.col-md-4() {
	width: percentage((4 / @grid-columns));
}

.col-md-5() {
	width: percentage((5 / @grid-columns));
}

.col-md-6() {
	width: percentage((6 / @grid-columns));
}

.col-md-7() {
	width: percentage((7 / @grid-columns));
}

.col-md-8() {
	width: percentage((8 / @grid-columns));
}

.col-md-9() {
	width: percentage((9 / @grid-columns));
}

.col-md-10() {
	width: percentage((10/ @grid-columns));
}

.col-md-11() {
	width: percentage((11/ @grid-columns));
}

.col-md-12() {
	width: 100%;
}

.col-md-push-0() {
	left: auto;
}

.col-md-push-1() {
	left: percentage((1 / @grid-columns));
}

.col-md-push-2() {
	left: percentage((2 / @grid-columns));
}

.col-md-push-3() {
	left: percentage((3 / @grid-columns));
}

.col-md-push-4() {
	left: percentage((4 / @grid-columns));
}

.col-md-push-5() {
	left: percentage((5 / @grid-columns));
}

.col-md-push-6() {
	left: percentage((6 / @grid-columns));
}

.col-md-push-7() {
	left: percentage((7 / @grid-columns));
}

.col-md-push-8() {
	left: percentage((8 / @grid-columns));
}

.col-md-push-9() {
	left: percentage((9 / @grid-columns));
}

.col-md-push-10() {
	left: percentage((10/ @grid-columns));
}

.col-md-push-11() {
	left: percentage((11/ @grid-columns));
}

.col-md-pull-0() {
	right: auto;
}

.col-md-pull-1() {
	right: percentage((1 / @grid-columns));
}

.col-md-pull-2() {
	right: percentage((2 / @grid-columns));
}

.col-md-pull-3() {
	right: percentage((3 / @grid-columns));
}

.col-md-pull-4() {
	right: percentage((4 / @grid-columns));
}

.col-md-pull-5() {
	right: percentage((5 / @grid-columns));
}

.col-md-pull-6() {
	right: percentage((6 / @grid-columns));
}

.col-md-pull-7() {
	right: percentage((7 / @grid-columns));
}

.col-md-pull-8() {
	right: percentage((8 / @grid-columns));
}

.col-md-pull-9() {
	right: percentage((9 / @grid-columns));
}

.col-md-pull-10() {
	right: percentage((10/ @grid-columns));
}

.col-md-pull-11() {
	right: percentage((11/ @grid-columns));
}

.col-md-offset-0() {
	margin-left: 0;
}

.col-md-offset-1() {
	margin-left: percentage((1 / @grid-columns));
}

.col-md-offset-2() {
	margin-left: percentage((2 / @grid-columns));
}

.col-md-offset-3() {
	margin-left: percentage((3 / @grid-columns));
}

.col-md-offset-4() {
	margin-left: percentage((4 / @grid-columns));
}

.col-md-offset-5() {
	margin-left: percentage((5 / @grid-columns));
}

.col-md-offset-6() {
	margin-left: percentage((6 / @grid-columns));
}

.col-md-offset-7() {
	margin-left: percentage((7 / @grid-columns));
}

.col-md-offset-8() {
	margin-left: percentage((8 / @grid-columns));
}

.col-md-offset-9() {
	margin-left: percentage((9 / @grid-columns));
}

.col-md-offset-10() {
	margin-left: percentage((10/ @grid-columns));
}

.col-md-offset-11() {
	margin-left: percentage((11/ @grid-columns));
}

.container() {
	@media (min-width: @screen-lg-min) {
		width: @container-lg;
	}
}

.col-lg-11() {
	@media (min-width: @screen-lg-min) {
		float: left;
	}
}

.col-lg-1() {
	@media (min-width: @screen-lg-min) {
		float: left;
	}
}

.col-lg-2() {
	@media (min-width: @screen-lg-min) {
		float: left;
	}
}

.col-lg-3() {
	@media (min-width: @screen-lg-min) {
		float: left;
	}
}

.col-lg-4() {
	@media (min-width: @screen-lg-min) {
		float: left;
	}
}

.col-lg-5() {
	@media (min-width: @screen-lg-min) {
		float: left;
	}
}

.col-lg-6() {
	@media (min-width: @screen-lg-min) {
		float: left;
	}
}

.col-lg-7() {
	@media (min-width: @screen-lg-min) {
		float: left;
	}
}

.col-lg-8() {
	@media (min-width: @screen-lg-min) {
		float: left;
	}
}

.col-lg-9() {
	@media (min-width: @screen-lg-min) {
		float: left;
	}
}

.col-lg-10() {
	@media (min-width: @screen-lg-min) {
		float: left;
	}
}

.col-lg-1() {
	width: percentage((1 / @grid-columns));
}

.col-lg-2() {
	width: percentage((2 / @grid-columns));
}

.col-lg-3() {
	width: percentage((3 / @grid-columns));
}

.col-lg-4() {
	width: percentage((4 / @grid-columns));
}

.col-lg-5() {
	width: percentage((5 / @grid-columns));
}

.col-lg-6() {
	width: percentage((6 / @grid-columns));
}

.col-lg-7() {
	width: percentage((7 / @grid-columns));
}

.col-lg-8() {
	width: percentage((8 / @grid-columns));
}

.col-lg-9() {
	width: percentage((9 / @grid-columns));
}

.col-lg-10() {
	width: percentage((10/ @grid-columns));
}

.col-lg-11() {
	width: percentage((11/ @grid-columns));
}

.col-lg-12() {
	width: 100%;
}

.col-lg-push-0() {
	left: auto;
}

.col-lg-push-1() {
	left: percentage((1 / @grid-columns));
}

.col-lg-push-2() {
	left: percentage((2 / @grid-columns));
}

.col-lg-push-3() {
	left: percentage((3 / @grid-columns));
}

.col-lg-push-4() {
	left: percentage((4 / @grid-columns));
}

.col-lg-push-5() {
	left: percentage((5 / @grid-columns));
}

.col-lg-push-6() {
	left: percentage((6 / @grid-columns));
}

.col-lg-push-7() {
	left: percentage((7 / @grid-columns));
}

.col-lg-push-8() {
	left: percentage((8 / @grid-columns));
}

.col-lg-push-9() {
	left: percentage((9 / @grid-columns));
}

.col-lg-push-10() {
	left: percentage((10/ @grid-columns));
}

.col-lg-push-11() {
	left: percentage((11/ @grid-columns));
}

.col-lg-pull-0() {
	right: auto;
}

.col-lg-pull-1() {
	right: percentage((1 / @grid-columns));
}

.col-lg-pull-2() {
	right: percentage((2 / @grid-columns));
}

.col-lg-pull-3() {
	right: percentage((3 / @grid-columns));
}

.col-lg-pull-4() {
	right: percentage((4 / @grid-columns));
}

.col-lg-pull-5() {
	right: percentage((5 / @grid-columns));
}

.col-lg-pull-6() {
	right: percentage((6 / @grid-columns));
}

.col-lg-pull-7() {
	right: percentage((7 / @grid-columns));
}

.col-lg-pull-8() {
	right: percentage((8 / @grid-columns));
}

.col-lg-pull-9() {
	right: percentage((9 / @grid-columns));
}

.col-lg-pull-10() {
	right: percentage((10/ @grid-columns));
}

.col-lg-pull-11() {
	right: percentage((11/ @grid-columns));
}

.col-lg-offset-0() {
	margin-left: 0;
}

.col-lg-offset-1() {
	margin-left: percentage((1 / @grid-columns));
}

.col-lg-offset-2() {
	margin-left: percentage((2 / @grid-columns));
}

.col-lg-offset-3() {
	margin-left: percentage((3 / @grid-columns));
}

.col-lg-offset-4() {
	margin-left: percentage((4 / @grid-columns));
}

.col-lg-offset-5() {
	margin-left: percentage((5 / @grid-columns));
}

.col-lg-offset-6() {
	margin-left: percentage((6 / @grid-columns));
}

.col-lg-offset-7() {
	margin-left: percentage((7 / @grid-columns));
}

.col-lg-offset-8() {
	margin-left: percentage((8 / @grid-columns));
}

.col-lg-offset-9() {
	margin-left: percentage((9 / @grid-columns));
}

.col-lg-offset-10() {
	margin-left: percentage((10/ @grid-columns));
}

.col-lg-offset-11() {
	margin-left: percentage((11/ @grid-columns));
}

.input-group() {
	position: relative; // For dropdowns
	display: table;
	border-collapse: separate; // prevent input groups from inheriting border styles from table cells when placed within a table
	// Undo padding and float of grid classes
	&.col {
		float: none;
		padding-left: 0;
		padding-right: 0;
	}
	.form-control {
		width: 100%;
		margin-bottom: 0;
	}
}

.input-group-btn() {
	width: 1%;
	white-space: nowrap;
	vertical-align: middle; // Match the inputs
}

.input-group-addon() {
	width: 1%;
	white-space: nowrap;
	vertical-align: middle;
}

.input-group-btn() {
	width: 1%;
	white-space: nowrap;
	vertical-align: middle;
}

.input-group-addon() {
	width: 1%;
	white-space: nowrap;
	vertical-align: middle;
}

.input-group-addon() {
	padding: @padding-base-vertical @padding-base-horizontal;
	font-size: @font-size-base;
	font-weight: normal;
	line-height: 1;
	color: @input-color;
	text-align: center;
	background-color: @input-group-addon-bg;
	border: 1px solid @input-group-addon-border-color;
	border-radius: @border-radius-base;
	// Sizing
	&.input-sm {
		padding: @padding-small-vertical @padding-small-horizontal;
		font-size: @font-size-small;
		border-radius: @border-radius-small;
	}
	&.input-lg {
		padding: @padding-large-vertical @padding-large-horizontal;
		font-size: @font-size-large;
		border-radius: @border-radius-large;
	}
	// Nuke default margins from checkboxes and radios to vertically center within.
	input[type="radio"],
	input[type="checkbox"] {
		margin-top: 0;
	}
}

.input-group-btn() {
	position: relative;
	white-space: nowrap;
}

.jumbotron() {
	padding: @jumbotron-padding;
	margin-bottom: @jumbotron-padding;
	font-size: (@font-size-base * 1.5);
	font-weight: 200;
	line-height: (@line-height-base * 1.5);
	color: @jumbotron-color;
	background-color: @jumbotron-bg;
	h1 {
		line-height: 1;
		color: @jumbotron-heading-color;
	}
	p {
		line-height: 1.4;
	}
	.container & {
		border-radius: @border-radius-large; // Only round corners at higher resolutions if contained in a container
	}
	@media screen and (min-width: @screen-sm) {
		padding-top: (@jumbotron-padding * 1.6);
		padding-bottom: (@jumbotron-padding * 1.6);
		.container & {
			padding-left: (@jumbotron-padding * 2);
			padding-right: (@jumbotron-padding * 2);
		}

		h1 {
			font-size: (@font-size-base * 4.5);
		}
	}
}

.label() {
	display: inline;
	padding: .2em .6em .3em;
	font-size: 75%;
	font-weight: bold;
	line-height: 1;
	color: @label-color;
	text-align: center;
	white-space: nowrap;
	vertical-align: baseline;
	border-radius: .25em;
	// Add hover effects, but only for links
	&[href] {
		&:hover,
		&:focus {
			color: @label-link-hover-color;
			text-decoration: none;
			cursor: pointer;
		}
	}
	// Empty labels collapse automatically (not available in IE8)
	&:empty {
		display: none;
	}
}

.label-default() {
	.label-variant(@label-default-bg);
}

.label-primary() {
	.label-variant(@label-primary-bg);
}

.label-success() {
	.label-variant(@label-success-bg);
}

.label-info() {
	.label-variant(@label-info-bg);
}

.label-warning() {
	.label-variant(@label-warning-bg);
}

.label-danger() {
	.label-variant(@label-danger-bg);
}

.list-group() {
	// No need to set list-style: none; since .list-group-item is block level
	margin-bottom: 20px;
	padding-left: 0; // reset padding because ul and ol
}

.list-group-item() {
	position: relative;
	display: block;
	padding: 10px 15px;
	// Place the border on the list items and negative margin up for better styling
	margin-bottom: -1px;
	background-color: @list-group-bg;
	border: 1px solid @list-group-border;
	// Round the first and last items
	&:first-child {
		.border-top-radius(@list-group-border-radius);
	}
	&:last-child {
		margin-bottom: 0;
		.border-bottom-radius(@list-group-border-radius);
	}
	// Align badges within list items
	> .badge {
		float: right;
	}
	> .badge + .badge {
		margin-right: 5px;
	}
	// Linked list items
	a& {
		color: @list-group-link-color;
		.list-group-item-heading {
			color: @list-group-link-heading-color;
		}
		// Hover state
		&:hover,
		&:focus {
			text-decoration: none;
			background-color: @list-group-hover-bg;
		}
	}
	// Active class on item itself, not parent
	&.active,
	&.active:hover,
	&.active:focus {
		z-index: 2; // Place active items above their siblings for proper border styling
		color: @list-group-active-color;
		background-color: @list-group-active-bg;
		border-color: @list-group-active-border;
		// Force color to inherit for custom content
		.list-group-item-heading {
			color: inherit;
		}
		.list-group-item-text {
			color: lighten(@list-group-active-bg, 40%);
		}
	}
}

.list-group-item-heading() {
	margin-top: 0;
	margin-bottom: 5px;
}

.list-group-item-text() {
	margin-bottom: 0;
	line-height: 1.3;
}

.media-body() {
	overflow: hidden;
	zoom: 1;
}

.media() {
	overflow: hidden;
	zoom: 1;
}

.media-object() {
	display: block;
}

.media() {
	display: block;
}

.media-heading() {
	margin: 0 0 5px;
}

.media() {
	> .pull-left {
		margin-right: 10px;
	}
	> .pull-right {
		margin-left: 10px;
	}
}

.media-list() {
	padding-left: 0;
	list-style: none;
}

.modal-open() {
	overflow: hidden;
	// Account for hiding of scrollbar
	body&,
	.navbar-fixed-top,
	.navbar-fixed-bottom {
		margin-right: 15px
	}
}

.modal() {
	display: none;
	overflow: auto;
	overflow-y: scroll;
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: @zindex-modal-background;
	// When fading in the modal, animate it to slide down
	&.fade .modal-dialog {
		.translate(0, -25%);
		.transition-transform(~"0.3s ease-out");
	}
	&.in .modal-dialog { .translate(0, 0)}
}

.modal-dialog() {
	margin-left: auto;
	margin-right: auto;
	width: auto;
	padding: 10px;
	z-index: (@zindex-modal-background + 10);
}

.modal-content() {
	position: relative;
	background-color: @modal-content-bg;
	border: 1px solid @modal-content-fallback-border-color; //old browsers fallback (ie8 etc)
	border: 1px solid @modal-content-border-color;
	border-radius: @border-radius-large;
	.box-shadow(0 3px 9px rgba(0,0,0,.5));
	background-clip: padding-box;
	// Remove focus outline from opened modal
	outline: none;
}

.modal-backdrop() {
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: (@zindex-modal-background - 10);
	background-color: @modal-backdrop-bg;
	// Fade for backdrop
	&.fade { .opacity(0);
	}
	&.in { .opacity(.5);
	}
}

.modal-header() {
	padding: @modal-title-padding;
	border-bottom: 1px solid @modal-header-border-color;
	min-height: (@modal-title-padding + @modal-title-line-height);
}

.modal-title() {
	margin: 0;
	line-height: @modal-title-line-height;
}

.modal-body() {
	position: relative;
	padding: @modal-inner-padding;
}

.modal-footer() {
	margin-top: 15px;
	padding: (@modal-inner-padding - 1) @modal-inner-padding @modal-inner-padding;
	text-align: right; // right align buttons
	border-top: 1px solid @modal-footer-border-color;
	.clearfix(); // clear it in case folks use .pull-* classes on buttons
	// Properly space out buttons
	.btn + .btn {
		margin-left: 5px;
		margin-bottom: 0; // account for input[type="submit"] which gets the bottom margin like all other inputs
	}
	// but override that for button groups
	.btn-group .btn + .btn {
		margin-left: -1px;
	}
	// and override it for block buttons as well
	.btn-block + .btn-block {
		margin-left: 0;
	}
}

.modal-dialog() {
	@media screen and (min-width: @screen-sm) {
		left: 50%;
		right: auto;
		width: 600px;
		padding-top: 30px;
		padding-bottom: 30px;
	}
}

.modal-content() {
	@media screen and (min-width: @screen-sm) {
		.box-shadow(0 5px 15px rgba(0,0,0,.5));
	}
}

.navbar() {
	position: relative;
	z-index: @zindex-navbar;
	min-height: @navbar-height; // Ensure a navbar always shows (e.g., without a .navbar-brand in collapsed mode)
	margin-bottom: @navbar-margin-bottom;
	border: 1px solid transparent;
	// Prevent floats from breaking the navbar
	.clearfix();
	@media (min-width: @grid-float-breakpoint) {
		border-radius: @navbar-border-radius;
	}
}

.navbar-header() {
	.clearfix();
	@media (min-width: @grid-float-breakpoint) {
		float: left;
	}
}

.navbar-collapse() {
	max-height: 340px;
	overflow-x: visible;
	padding-right: @navbar-padding-horizontal;
	padding-left: @navbar-padding-horizontal;
	border-top: 1px solid transparent;
	box-shadow: inset 0 1px 0 rgba(255, 255, 255, .1);
	.clearfix();
	-webkit-overflow-scrolling: touch;
	&.in {
		overflow-y: auto;
	}
	@media (min-width: @grid-float-breakpoint) {
		width: auto;
		border-top: 0;
		box-shadow: none;
		&.collapse {
			display: block !important;
			height: auto !important;
			padding-bottom: 0; // Override default setting
			overflow: visible !important;
		}

		&.in {
			overflow-y: visible;
		}

		// Account for first and last children spacing
		.navbar-nav.navbar-left:first-child {
			margin-left: -@navbar-padding-horizontal;
		}

		.navbar-nav.navbar-right:last-child {
			margin-right: -@navbar-padding-horizontal;
		}

		.navbar-text:last-child {
			margin-right: 0;
		}
	}
}

.navbar-static-top() {
	border-width: 0 0 1px;
	@media (min-width: @grid-float-breakpoint) {
		border-radius: 0;
	}
}

.navbar-fixed-bottom() {
	position: fixed;
	right: 0;
	left: 0;
	border-width: 0 0 1px;
	// Undo the rounded corners
	@media (min-width: @grid-float-breakpoint) {
		border-radius: 0;
	}
}

.navbar-fixed-top() {
	position: fixed;
	right: 0;
	left: 0;
	border-width: 0 0 1px;
	@media (min-width: @grid-float-breakpoint) {
		border-radius: 0;
	}
}

.navbar-fixed-top() {
	z-index: @zindex-navbar-fixed;
	top: 0;
}

.navbar-fixed-bottom() {
	bottom: 0;
	margin-bottom: 0; // override .navbar defaults
}

.navbar-brand() {
	float: left;
	padding: @navbar-padding-vertical @navbar-padding-horizontal;
	font-size: @font-size-large;
	line-height: @line-height-computed;
	&:hover,
	&:focus {
		text-decoration: none;
	}
	@media (min-width: @grid-float-breakpoint) {
		.navbar > .container & {
			margin-left: -@navbar-padding-horizontal;
		}
	}
}

.navbar-toggle() {
	position: relative;
	float: right;
	margin-right: @navbar-padding-horizontal;
	padding: 9px 10px;
	.navbar-vertical-align(34px);
	background-color: transparent;
	border: 1px solid transparent;
	border-radius: @border-radius-base;
	// Bars
	.icon-bar {
		display: block;
		width: 22px;
		height: 2px;
		border-radius: 1px;
	}
	.icon-bar + .icon-bar {
		margin-top: 4px;
	}
	@media (min-width: @grid-float-breakpoint) {
		display: none;
	}
}

.navbar-nav() {
	margin: (@navbar-padding-vertical / 2) -@navbar-padding-horizontal;
	> li > a {
		padding-top: 10px;
		padding-bottom: 10px;
		line-height: @line-height-computed;
	}
	@media (max-width: @screen-xs-max) {
		// Dropdowns get custom display when collapsed
		.open .dropdown-menu {
			position: static;
			float: none;
			width: auto;
			margin-top: 0;
			background-color: transparent;
			border: 0;
			box-shadow: none;
			> li > a,
			.dropdown-header {
				padding: 5px 15px 5px 25px;
			}
			> li > a {
				line-height: @line-height-computed;
				&:hover,
				&:focus {
					background-image: none;
				}
			}
		}
	}
	// Uncollapse the nav
	@media (min-width: @grid-float-breakpoint) {
		float: left;
		margin: 0;
		> li {
			float: left;
			> a {
				padding-top: ((@navbar-height - @line-height-computed) / 2);
				padding-bottom: ((@navbar-height - @line-height-computed) / 2);
			}
		}
	}
}

.navbar-left() { .pull-left();
}

.navbar-right() { .pull-right();
}

.navbar-form() {
	margin-left: -@navbar-padding-horizontal;
	margin-right: -@navbar-padding-horizontal;
	padding: 10px @navbar-padding-horizontal;
	border-top: 1px solid transparent;
	border-bottom: 1px solid transparent;
	@shadow: inset 0 1px 0 rgba(255, 255, 255, .1), 0 1px 0 rgba(255, 255, 255, .1);
	.box-shadow(@shadow);
	// Mixin behavior for optimum display
	.form-inline();
	.form-group {
		@media (max-width: @screen-xs-max) {
			margin-bottom: 5px;
		}
	}
	// Vertically center in expanded, horizontal navbar
	.navbar-vertical-align(@input-height-base);
	// Undo 100% width for pull classes
	@media (min-width: @grid-float-breakpoint) {
		width: auto;
		border: 0;
		margin-left: 0;
		margin-right: 0;
		padding-top: 0;
		padding-bottom: 0;
		.box-shadow(none);
	}
}

.navbar-btn() {
	.navbar-vertical-align(@input-height-base);
}

.navbar-text() {
	float: left;
	.navbar-vertical-align(@line-height-computed);
	@media (min-width: @grid-float-breakpoint) {
		margin-left: @navbar-padding-horizontal;
		margin-right: @navbar-padding-horizontal;
	}
}

.navbar-default() {
	background-color: @navbar-default-bg;
	border-color: @navbar-default-border;
	.navbar-brand {
		color: @navbar-default-brand-color;
		&:hover,
		&:focus {
			color: @navbar-default-brand-hover-color;
			background-color: @navbar-default-brand-hover-bg;
		}
	}
	.navbar-text {
		color: @navbar-default-color;
	}
	.navbar-nav {
		> li > a {
			color: @navbar-default-link-color;
			&:hover,
			&:focus {
				color: @navbar-default-link-hover-color;
				background-color: @navbar-default-link-hover-bg;
			}
		}
		> .active > a {
			&,
			&:hover,
			&:focus {
				color: @navbar-default-link-active-color;
				background-color: @navbar-default-link-active-bg;
			}
		}
		> .disabled > a {
			&,
			&:hover,
			&:focus {
				color: @navbar-default-link-disabled-color;
				background-color: @navbar-default-link-disabled-bg;
			}
		}
	}
	.navbar-toggle {
		border-color: @navbar-default-toggle-border-color;
		&:hover,
		&:focus {
			background-color: @navbar-default-toggle-hover-bg;
		}
		.icon-bar {
			background-color: @navbar-default-toggle-icon-bar-bg;
		}
	}
	.navbar-collapse,
	.navbar-form {
		border-color: darken(@navbar-default-bg, 7%);
	}
	// Dropdown menu items and carets
	.navbar-nav {
		// Caret should match text color on hover
		> .dropdown > a:hover .caret,
		> .dropdown > a:focus .caret {
			border-top-color: @navbar-default-link-hover-color;
			border-bottom-color: @navbar-default-link-hover-color;
		}
		// Remove background color from open dropdown
		> .open > a {
			&,
			&:hover,
			&:focus {
				background-color: @navbar-default-link-active-bg;
				color: @navbar-default-link-active-color;
				.caret {
					border-top-color: @navbar-default-link-active-color;
					border-bottom-color: @navbar-default-link-active-color;
				}
			}
		}
		> .dropdown > a .caret {
			border-top-color: @navbar-default-link-color;
			border-bottom-color: @navbar-default-link-color;
		}
		@media (max-width: @screen-xs-max) {
			// Dropdowns get custom display when collapsed
			.open .dropdown-menu {
				> li > a {
					color: @navbar-default-link-color;
					&:hover,
					&:focus {
						color: @navbar-default-link-hover-color;
						background-color: @navbar-default-link-hover-bg;
					}
				}
				> .active > a {
					&,
					&:hover,
					&:focus {
						color: @navbar-default-link-active-color;
						background-color: @navbar-default-link-active-bg;
					}
				}
				> .disabled > a {
					&,
					&:hover,
					&:focus {
						color: @navbar-default-link-disabled-color;
						background-color: @navbar-default-link-disabled-bg;
					}
				}
			}
		}
	}
	// Links in navbars
	//
	// Add a class to ensure links outside the navbar nav are colored correctly.
	.navbar-link {
		color: @navbar-default-link-color;
		&:hover {
			color: @navbar-default-link-hover-color;
		}
	}
}

.navbar-inverse() {
	background-color: @navbar-inverse-bg;
	border-color: @navbar-inverse-border;
	.navbar-brand {
		color: @navbar-inverse-brand-color;
		&:hover,
		&:focus {
			color: @navbar-inverse-brand-hover-color;
			background-color: @navbar-inverse-brand-hover-bg;
		}
	}
	.navbar-text {
		color: @navbar-inverse-color;
	}
	.navbar-nav {
		> li > a {
			color: @navbar-inverse-link-color;
			&:hover,
			&:focus {
				color: @navbar-inverse-link-hover-color;
				background-color: @navbar-inverse-link-hover-bg;
			}
		}
		> .active > a {
			&,
			&:hover,
			&:focus {
				color: @navbar-inverse-link-active-color;
				background-color: @navbar-inverse-link-active-bg;
			}
		}
		> .disabled > a {
			&,
			&:hover,
			&:focus {
				color: @navbar-inverse-link-disabled-color;
				background-color: @navbar-inverse-link-disabled-bg;
			}
		}
	}
	// Darken the responsive nav toggle
	.navbar-toggle {
		border-color: @navbar-inverse-toggle-border-color;
		&:hover,
		&:focus {
			background-color: @navbar-inverse-toggle-hover-bg;
		}
		.icon-bar {
			background-color: @navbar-inverse-toggle-icon-bar-bg;
		}
	}
	.navbar-collapse,
	.navbar-form {
		border-color: darken(@navbar-inverse-bg, 7%);
	}
	// Dropdowns
	.navbar-nav {
		> .open > a {
			&,
			&:hover,
			&:focus {
				background-color: @navbar-inverse-link-active-bg;
				color: @navbar-inverse-link-active-color;
			}
		}
		> .dropdown > a:hover .caret {
			border-top-color: @navbar-inverse-link-hover-color;
			border-bottom-color: @navbar-inverse-link-hover-color;
		}
		> .dropdown > a .caret {
			border-top-color: @navbar-inverse-link-color;
			border-bottom-color: @navbar-inverse-link-color;
		}
		> .open > a {
			&,
			&:hover,
			&:focus {
				.caret {
					border-top-color: @navbar-inverse-link-active-color;
					border-bottom-color: @navbar-inverse-link-active-color;
				}
			}
		}
		@media (max-width: @screen-xs-max) {
			// Dropdowns get custom display
			.open .dropdown-menu {
				> .dropdown-header {
					border-color: @navbar-inverse-border;
				}
				> li > a {
					color: @navbar-inverse-link-color;
					&:hover,
					&:focus {
						color: @navbar-inverse-link-hover-color;
						background-color: @navbar-inverse-link-hover-bg;
					}
				}
				> .active > a {
					&,
					&:hover,
					&:focus {
						color: @navbar-inverse-link-active-color;
						background-color: @navbar-inverse-link-active-bg;
					}
				}
				> .disabled > a {
					&,
					&:hover,
					&:focus {
						color: @navbar-inverse-link-disabled-color;
						background-color: @navbar-inverse-link-disabled-bg;
					}
				}
			}
		}
	}
	.navbar-link {
		color: @navbar-inverse-link-color;
		&:hover {
			color: @navbar-inverse-link-hover-color;
		}
	}
}

.nav() {
	margin-bottom: 0;
	padding-left: 0; // Override default ul/ol
	list-style: none;
	.clearfix();
	> li {
		position: relative;
		display: block;
		> a {
			position: relative;
			display: block;
			padding: @nav-link-padding;
			&:hover,
			&:focus {
				text-decoration: none;
				background-color: @nav-link-hover-bg;
			}
		}
		// Disabled state sets text to gray and nukes hover/tab effects
		&.disabled > a {
			color: @nav-disabled-link-color;
			&:hover,
			&:focus {
				color: @nav-disabled-link-hover-color;
				text-decoration: none;
				background-color: transparent;
				cursor: not-allowed;
			}
		}
	}
	// Open dropdowns
	.open > a {
		&,
		&:hover,
		&:focus {
			background-color: @nav-link-hover-bg;
			border-color: @link-color;
		}
	}
	// Nav dividers (deprecated with v3.0.1)
	//
	// This should have been removed in v3 with the dropping of `.nav-list`, but
	// we missed it. We don't currently support this anywhere, but in the interest
	// of maintaining backward compatibility in case you use it, it's deprecated.
	.nav-divider {
		.nav-divider();
	}
	// Prevent IE8 from misplacing imgs
	//
	// See https://github.com/h5bp/html5-boilerplate/issues/984#issuecomment-3985989
	> li > a > img {
		max-width: none;
	}
}

.nav-tabs() {
	border-bottom: 1px solid @nav-tabs-border-color;
	> li {
		float: left;
		// Make the list-items overlay the bottom border
		margin-bottom: -1px;
		// Actual tabs (as links)
		> a {
			margin-right: 2px;
			line-height: @line-height-base;
			border: 1px solid transparent;
			border-radius: @border-radius-base @border-radius-base 0 0;
			&:hover {
				border-color: @nav-tabs-link-hover-border-color @nav-tabs-link-hover-border-color @nav-tabs-border-color;
			}
		}
		// Active state, and it's :hover to override normal :hover
		&.active > a {
			&,
			&:hover,
			&:focus {
				color: @nav-tabs-active-link-hover-color;
				background-color: @nav-tabs-active-link-hover-bg;
				border: 1px solid @nav-tabs-active-link-hover-border-color;
				border-bottom-color: transparent;
				cursor: default;
			}
		}
	}
	// pulling this in mainly for less shorthand
	&.nav-justified {
		.nav-justified();
		.nav-tabs-justified();
	}
}

.nav-pills() {
	> li {
		float: left;
		// Links rendered as pills
		> a {
			border-radius: 5px;
		}
		+ li {
			margin-left: 2px;
		}
		// Active state
		&.active > a {
			&,
			&:hover,
			&:focus {
				color: @nav-pills-active-link-hover-color;
				background-color: @nav-pills-active-link-hover-bg;
			}
		}
	}
}

.nav-stacked() {
	> li {
		float: none;
		+ li {
			margin-top: 2px;
			margin-left: 0; // no need for this gap between nav items
		}
	}
}

.nav-justified() {
	width: 100%;
	> li {
		float: none;
		> a {
			text-align: center;
			margin-bottom: 5px;
		}
	}
	@media (min-width: @screen-sm-min) {
		> li {
			display: table-cell;
			width: 1%;
			> a {
				margin-bottom: 0;
			}
		}
	}
}

.nav-tabs-justified() {
	border-bottom: 0;
	> li > a {
		// Override margin from .nav-tabs
		margin-right: 0;
		border-radius: @border-radius-base;
	}
	> .active > a,
	> .active > a:hover,
	> .active > a:focus {
		border: 1px solid @nav-tabs-justified-link-border-color;
	}
	@media (min-width: @screen-sm-min) {
		> li > a {
			border-bottom: 1px solid @nav-tabs-justified-link-border-color;
			border-radius: @border-radius-base @border-radius-base 0 0;
		}

		> .active > a,
		> .active > a:hover,
		> .active > a:focus {
			border-bottom-color: @nav-tabs-justified-active-link-border-color;
		}
	}
}

.tabbable() {
	.clearfix();
}

.pill-content() {
	> .active {
		display: block;
	}
}

.tab-content() {
	> .active {
		display: block;
	}
}

.pager() {
	padding-left: 0;
	margin: @line-height-computed 0;
	list-style: none;
	text-align: center;
	.clearfix();
	li {
		display: inline;
		> a,
		> span {
			display: inline-block;
			padding: 5px 14px;
			background-color: @pagination-bg;
			border: 1px solid @pagination-border;
			border-radius: @pager-border-radius;
		}
		> a:hover,
		> a:focus {
			text-decoration: none;
			background-color: @pagination-hover-bg;
		}
	}
	.next {
		> a,
		> span {
			float: right;
		}
	}
	.previous {
		> a,
		> span {
			float: left;
		}
	}
	.disabled {
		> a,
		> a:hover,
		> a:focus,
		> span {
			color: @pager-disabled-color;
			background-color: @pagination-bg;
			cursor: not-allowed;
		}
	}
}

.pagination() {
	display: inline-block;
	padding-left: 0;
	margin: @line-height-computed 0;
	border-radius: @border-radius-base;
	> li {
		display: inline; // Remove list-style and block-level defaults
		> a,
		> span {
			position: relative;
			float: left; // Collapse white-space
			padding: @padding-base-vertical @padding-base-horizontal;
			line-height: @line-height-base;
			text-decoration: none;
			background-color: @pagination-bg;
			border: 1px solid @pagination-border;
			margin-left: -1px;
		}
		&:first-child {
			> a,
			> span {
				margin-left: 0;
				.border-left-radius(@border-radius-base);
			}
		}
		&:last-child {
			> a,
			> span {
				.border-right-radius(@border-radius-base);
			}
		}
	}
	> li > a,
	> li > span {
		&:hover,
		&:focus {
			background-color: @pagination-hover-bg;
		}
	}
	> .active > a,
	> .active > span {
		&,
		&:hover,
		&:focus {
			z-index: 2;
			color: @pagination-active-color;
			background-color: @pagination-active-bg;
			border-color: @pagination-active-bg;
			cursor: default;
		}
	}
	> .disabled {
		> span,
		> span:hover,
		> span:focus,
		> a,
		> a:hover,
		> a:focus {
			color: @pagination-disabled-color;
			background-color: @pagination-bg;
			border-color: @pagination-border;
			cursor: not-allowed;
		}
	}
}

.pagination-lg() {
	.pagination-size(@padding-large-vertical, @padding-large-horizontal, @font-size-large, @border-radius-large);
}

.pagination-sm() {
	.pagination-size(@padding-small-vertical, @padding-small-horizontal, @font-size-small, @border-radius-small);
}

.panel() {
	margin-bottom: @line-height-computed;
	background-color: @panel-bg;
	border: 1px solid transparent;
	border-radius: @panel-border-radius;
	.box-shadow(0 1px 1px rgba(0,0,0,.05));
}

.panel-body() {
	padding: 15px;
	.clearfix();
}

.panel() {
	> .list-group {
		margin-bottom: 0;
		.list-group-item {
			border-width: 1px 0;
			// Remove border radius for top one
			&:first-child {
				.border-top-radius(0);
			}
			// But keep it for the last one
			&:last-child {
				border-bottom: 0;
			}
		}
	}
}

.panel() {
	> .table {
		margin-bottom: 0;
	}
	> .panel-body + .table {
		border-top: 1px solid @table-border-color;
	}
	> .table-bordered {
		border: 0;
		> thead,
		> tbody,
		> tfoot {
			> tr {
				> th:first-child,
				> td:first-child {
					border-left: 0;
				}
				> th:last-child,
				> td:last-child {
					border-right: 0;
				}
				&:last-child > th,
				&:last-child > td {
					border-bottom: 0;
				}
			}
		}
	}
}

.panel-heading() {
	padding: 10px 15px;
	border-bottom: 1px solid transparent;
	.border-top-radius(@panel-border-radius - 1);
}

.panel-title() {
	margin-top: 0;
	margin-bottom: 0;
	font-size: ceil((@font-size-base * 1.125));
	> a {
		color: inherit;
	}
}

.panel-footer() {
	padding: 10px 15px;
	background-color: @panel-footer-bg;
	border-top: 1px solid @panel-inner-border;
	.border-bottom-radius(@panel-border-radius - 1);
}

.panel-group() {
	// Tighten up margin so it's only between panels
	.panel {
		margin-bottom: 0;
		border-radius: @panel-border-radius;
		overflow: hidden; // crop contents when collapsed
		+ .panel {
			margin-top: 5px;
		}
	}
	.panel-heading {
		border-bottom: 0;
		+ .panel-collapse .panel-body {
			border-top: 1px solid @panel-inner-border;
		}
	}
	.panel-footer {
		border-top: 0;
		+ .panel-collapse .panel-body {
			border-bottom: 1px solid @panel-inner-border;
		}
	}
}

.panel-default() {
	.panel-variant(@panel-default-border, @panel-default-text, @panel-default-heading-bg, @panel-default-border);
}

.panel-primary() {
	.panel-variant(@panel-primary-border, @panel-primary-text, @panel-primary-heading-bg, @panel-primary-border);
}

.panel-success() {
	.panel-variant(@panel-success-border, @panel-success-text, @panel-success-heading-bg, @panel-success-border);
}

.panel-warning() {
	.panel-variant(@panel-warning-border, @panel-warning-text, @panel-warning-heading-bg, @panel-warning-border);
}

.panel-danger() {
	.panel-variant(@panel-danger-border, @panel-danger-text, @panel-danger-heading-bg, @panel-danger-border);
}

.panel-info() {
	.panel-variant(@panel-info-border, @panel-info-text, @panel-info-heading-bg, @panel-info-border);
}

.popover() {
	position: absolute;
	top: 0;
	left: 0;
	z-index: @zindex-popover;
	display: none;
	max-width: @popover-max-width;
	padding: 1px;
	text-align: left; // Reset given new insertion method
	background-color: @popover-bg;
	background-clip: padding-box;
	border: 1px solid @popover-fallback-border-color;
	border: 1px solid @popover-border-color;
	border-radius: @border-radius-large;
	.box-shadow(0 5px 10px rgba(0,0,0,.2));
	// Overrides for proper insertion
	white-space: normal;
	// Offset the popover to account for the popover arrow
	&.top {
		margin-top: -10px;
	}
	&.right {
		margin-left: 10px;
	}
	&.bottom {
		margin-top: 10px;
	}
	&.left {
		margin-left: -10px;
	}
}

.popover-title() {
	margin: 0; // reset heading margin
	padding: 8px 14px;
	font-size: @font-size-base;
	font-weight: normal;
	line-height: 18px;
	background-color: @popover-title-bg;
	border-bottom: 1px solid darken(@popover-title-bg, 5%);
	border-radius: 5px 5px 0 0;
}

.popover-content() {
	padding: 9px 14px;
}

.popover() {
	&.top .arrow {
		left: 50%;
		margin-left: -@popover-arrow-outer-width;
		border-bottom-width: 0;
		border-top-color: @popover-arrow-outer-fallback-color; // IE8 fallback
		border-top-color: @popover-arrow-outer-color;
		bottom: -@popover-arrow-outer-width;
		&:after {
			content: " ";
			bottom: 1px;
			margin-left: -@popover-arrow-width;
			border-bottom-width: 0;
			border-top-color: @popover-arrow-color;
		}
	}
	&.right .arrow {
		top: 50%;
		left: -@popover-arrow-outer-width;
		margin-top: -@popover-arrow-outer-width;
		border-left-width: 0;
		border-right-color: @popover-arrow-outer-fallback-color; // IE8 fallback
		border-right-color: @popover-arrow-outer-color;
		&:after {
			content: " ";
			left: 1px;
			bottom: -@popover-arrow-width;
			border-left-width: 0;
			border-right-color: @popover-arrow-color;
		}
	}
	&.bottom .arrow {
		left: 50%;
		margin-left: -@popover-arrow-outer-width;
		border-top-width: 0;
		border-bottom-color: @popover-arrow-outer-fallback-color; // IE8 fallback
		border-bottom-color: @popover-arrow-outer-color;
		top: -@popover-arrow-outer-width;
		&:after {
			content: " ";
			top: 1px;
			margin-left: -@popover-arrow-width;
			border-top-width: 0;
			border-bottom-color: @popover-arrow-color;
		}
	}
	&.left .arrow {
		top: 50%;
		right: -@popover-arrow-outer-width;
		margin-top: -@popover-arrow-outer-width;
		border-right-width: 0;
		border-left-color: @popover-arrow-outer-fallback-color; // IE8 fallback
		border-left-color: @popover-arrow-outer-color;
		&:after {
			content: " ";
			right: 1px;
			border-right-width: 0;
			border-left-color: @popover-arrow-color;
			bottom: -@popover-arrow-width;
		}
	}
}

.navbar() {
	@media print {
		display: none;
	}
}

.table() {
	@media print {
		td,
		th {
			background-color: #fff !important;
		}
	}
}

.label() {
	@media print {
		border: 1px solid #000;
	}
}

.btn() {
	@media print {
		border: 1px solid #000;
	}
}

.table() {
	@media print {
		border-collapse: collapse !important;
	}
}

.table-bordered() {
	@media print {
		th,
		td {
			border: 1px solid #ddd !important;
		}
	}
}

.progress() {
	overflow: hidden;
	height: @line-height-computed;
	margin-bottom: @line-height-computed;
	background-color: @progress-bg;
	border-radius: @border-radius-base;
	.box-shadow(inset 0 1px 2px rgba(0,0,0,.1));
}

.progress-bar() {
	float: left;
	width: 0%;
	height: 100%;
	font-size: @font-size-small;
	line-height: @line-height-computed;
	color: @progress-bar-color;
	text-align: center;
	background-color: @progress-bar-bg;
	.box-shadow(inset 0 -1px 0 rgba(0,0,0,.15));
	.transition(width .6s ease);
}

.progress-bar-success() {
	.progress-bar-variant(@progress-bar-success-bg);
}

.progress-bar-info() {
	.progress-bar-variant(@progress-bar-info-bg);
}

.progress-bar-warning() {
	.progress-bar-variant(@progress-bar-warning-bg);
}

.progress-bar-danger() {
	.progress-bar-variant(@progress-bar-danger-bg);
}

.hidden() {
	display: none !important;
	visibility: hidden !important;
}

.visible-xs() {
	.responsive-invisibility();
	@media (max-width: @screen-xs-max) {
		.responsive-visibility();
	}
	&.visible-sm {
		@media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
			.responsive-visibility();
		}
	}
	&.visible-md {
		@media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
			.responsive-visibility();
		}
	}
	&.visible-lg {
		@media (min-width: @screen-lg-min) {
			.responsive-visibility();
		}
	}
}

.visible-sm() {
	.responsive-invisibility();
	&.visible-xs {
		@media (max-width: @screen-xs-max) {
			.responsive-visibility();
		}
	}
	@media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
		.responsive-visibility();
	}
	&.visible-md {
		@media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
			.responsive-visibility();
		}
	}
	&.visible-lg {
		@media (min-width: @screen-lg-min) {
			.responsive-visibility();
		}
	}
}

.visible-md() {
	.responsive-invisibility();
	&.visible-xs {
		@media (max-width: @screen-xs-max) {
			.responsive-visibility();
		}
	}
	&.visible-sm {
		@media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
			.responsive-visibility();
		}
	}
	@media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
		.responsive-visibility();
	}
	&.visible-lg {
		@media (min-width: @screen-lg-min) {
			.responsive-visibility();
		}
	}
}

.visible-lg() {
	.responsive-invisibility();
	&.visible-xs {
		@media (max-width: @screen-xs-max) {
			.responsive-visibility();
		}
	}
	&.visible-sm {
		@media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
			.responsive-visibility();
		}
	}
	&.visible-md {
		@media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
			.responsive-visibility();
		}
	}
	@media (min-width: @screen-lg-min) {
		.responsive-visibility();
	}
}

.hidden-xs() {
	.responsive-visibility();
	@media (max-width: @screen-xs-max) {
		.responsive-invisibility();
	}
	&.hidden-sm {
		@media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
			.responsive-invisibility();
		}
	}
	&.hidden-md {
		@media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
			.responsive-invisibility();
		}
	}
	&.hidden-lg {
		@media (min-width: @screen-lg-min) {
			.responsive-invisibility();
		}
	}
}

.hidden-sm() {
	.responsive-visibility();
	&.hidden-xs {
		@media (max-width: @screen-xs-max) {
			.responsive-invisibility();
		}
	}
	@media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
		.responsive-invisibility();
	}
	&.hidden-md {
		@media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
			.responsive-invisibility();
		}
	}
	&.hidden-lg {
		@media (min-width: @screen-lg-min) {
			.responsive-invisibility();
		}
	}
}

.hidden-md() {
	.responsive-visibility();
	&.hidden-xs {
		@media (max-width: @screen-xs-max) {
			.responsive-invisibility();
		}
	}
	&.hidden-sm {
		@media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
			.responsive-invisibility();
		}
	}
	@media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
		.responsive-invisibility();
	}
	&.hidden-lg {
		@media (min-width: @screen-lg-min) {
			.responsive-invisibility();
		}
	}
}

.hidden-lg() {
	.responsive-visibility();
	&.hidden-xs {
		@media (max-width: @screen-xs-max) {
			.responsive-invisibility();
		}
	}
	&.hidden-sm {
		@media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
			.responsive-invisibility();
		}
	}
	&.hidden-md {
		@media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
			.responsive-invisibility();
		}
	}
	@media (min-width: @screen-lg-min) {
		.responsive-invisibility();
	}
}

.visible-print() {
	.responsive-invisibility();
}

.visible-print() {
	@media print {
		.responsive-visibility();
	}
}

.hidden-print() {
	@media print {
		.responsive-invisibility();
	}
}

.img-responsive() {
	.img-responsive();
}

.img-rounded() {
	border-radius: @border-radius-large;
}

.img-thumbnail() {
	padding: @thumbnail-padding;
	line-height: @line-height-base;
	background-color: @thumbnail-bg;
	border: 1px solid @thumbnail-border;
	border-radius: @thumbnail-border-radius;
	.transition(all .2s ease-in-out);
	// Keep them at most 100% wide
	.img-responsive(inline-block);
}

.img-circle() {
	border-radius: 50%; // set radius in percents
}

.sr-only() {
	position: absolute;
	width: 1px;
	height: 1px;
	margin: -1px;
	padding: 0;
	overflow: hidden;
	clip: rect(0 0 0 0);
	border: 0;
}

.table() {
	width: 100%;
	margin-bottom: @line-height-computed;
	// Cells
	> thead,
	> tbody,
	> tfoot {
		> tr {
			> th,
			> td {
				padding: @table-cell-padding;
				line-height: @line-height-base;
				vertical-align: top;
				border-top: 1px solid @table-border-color;
			}
		}
	}
	// Bottom align for column headings
	> thead > tr > th {
		vertical-align: bottom;
		border-bottom: 2px solid @table-border-color;
	}
	// Remove top border from thead by default
	> caption + thead,
	> colgroup + thead,
	> thead:first-child {
		> tr:first-child {
			> th,
			> td {
				border-top: 0;
			}
		}
	}
	// Account for multiple tbody instances
	> tbody + tbody {
		border-top: 2px solid @table-border-color;
	}
	// Nesting
	.table {
		background-color: @body-bg;
	}
}

.table-condensed() {
	> thead,
	> tbody,
	> tfoot {
		> tr {
			> th,
			> td {
				padding: @table-condensed-cell-padding;
			}
		}
	}
}

.table-bordered() {
	border: 1px solid @table-border-color;
	> thead,
	> tbody,
	> tfoot {
		> tr {
			> th,
			> td {
				border: 1px solid @table-border-color;
			}
		}
	}
	> thead {
		> tr {
			> th,
			> td {
				border-bottom-width: 2px;
			}
		}
	}
}

.table-striped() {
	> tbody {
		> tr:nth-child(odd) {
			> td,
			> th {
				background-color: @table-bg-accent;
			}
		}
	}
}

.table-hover() {
	> tbody {
		> tr:hover {
			> td,
			> th {
				background-color: @table-bg-hover;
			}
		}
	}
}

.table-responsive() {
	@media (max-width: @screen-sm-min) {
		width: 100%;
		margin-bottom: 15px;
		overflow-y: hidden;
		overflow-x: scroll;
		-ms-overflow-style: -ms-autohiding-scrollbar;
		border: 1px solid @table-border-color;
		-webkit-overflow-scrolling: touch;
		// Tighten up spacing and give a background color
		> .table {
			margin-bottom: 0;
			background-color: #fff;
			// Ensure the content doesn't wrap
			> thead,
			> tbody,
			> tfoot {
				> tr {
					> th,
					> td {
						white-space: nowrap;
					}
				}
			}
		}

		// Special overrides for the bordered tables
		> .table-bordered {
			border: 0;
			// Nuke the appropriate borders so that the parent can handle them
			> thead,
			> tbody,
			> tfoot {
				> tr {
					> th:first-child,
					> td:first-child {
						border-left: 0;
					}
					> th:last-child,
					> td:last-child {
						border-right: 0;
					}
				}
				> tr:last-child {
					> th,
					> td {
						border-bottom: 0;
					}
				}
			}
		}
	}
}

.thumbnail() {
	.img-thumbnail();
	display: block; // Override the inline-block from `.img-thumbnail`
	margin-bottom: @line-height-computed;
	> img {
		.img-responsive();
	}
}

.tooltip() {
	position: absolute;
	z-index: @zindex-tooltip;
	display: block;
	visibility: visible;
	font-size: @font-size-small;
	line-height: 1.4;
	.opacity(0);
	&.in { .opacity(.9);
	}
	&.top {
		margin-top: -3px;
		padding: 5px 0;
	}
	&.right {
		margin-left: 3px;
		padding: 0 5px;
	}
	&.bottom {
		margin-top: 3px;
		padding: 5px 0;
	}
	&.left {
		margin-left: -3px;
		padding: 0 5px;
	}
}

.tooltip-inner() {
	max-width: @tooltip-max-width;
	padding: 3px 8px;
	color: @tooltip-color;
	text-align: center;
	text-decoration: none;
	background-color: @tooltip-bg;
	border-radius: @border-radius-base;
}

.tooltip-arrow() {
	position: absolute;
	width: 0;
	height: 0;
	border-color: transparent;
	border-style: solid;
}

.tooltip() {
	&.top .tooltip-arrow {
		bottom: 0;
		left: 50%;
		margin-left: -@tooltip-arrow-width;
		border-width: @tooltip-arrow-width @tooltip-arrow-width 0;
		border-top-color: @tooltip-arrow-color;
	}
	&.top-left .tooltip-arrow {
		bottom: 0;
		left: 5px;
		border-width: @tooltip-arrow-width @tooltip-arrow-width 0;
		border-top-color: @tooltip-arrow-color;
	}
	&.top-right .tooltip-arrow {
		bottom: 0;
		right: 5px;
		border-width: @tooltip-arrow-width @tooltip-arrow-width 0;
		border-top-color: @tooltip-arrow-color;
	}
	&.right .tooltip-arrow {
		top: 50%;
		left: 0;
		margin-top: -@tooltip-arrow-width;
		border-width: @tooltip-arrow-width @tooltip-arrow-width @tooltip-arrow-width 0;
		border-right-color: @tooltip-arrow-color;
	}
	&.left .tooltip-arrow {
		top: 50%;
		right: 0;
		margin-top: -@tooltip-arrow-width;
		border-width: @tooltip-arrow-width 0 @tooltip-arrow-width @tooltip-arrow-width;
		border-left-color: @tooltip-arrow-color;
	}
	&.bottom .tooltip-arrow {
		top: 0;
		left: 50%;
		margin-left: -@tooltip-arrow-width;
		border-width: 0 @tooltip-arrow-width @tooltip-arrow-width;
		border-bottom-color: @tooltip-arrow-color;
	}
	&.bottom-left .tooltip-arrow {
		top: 0;
		left: 5px;
		border-width: 0 @tooltip-arrow-width @tooltip-arrow-width;
		border-bottom-color: @tooltip-arrow-color;
	}
	&.bottom-right .tooltip-arrow {
		top: 0;
		right: 5px;
		border-width: 0 @tooltip-arrow-width @tooltip-arrow-width;
		border-bottom-color: @tooltip-arrow-color;
	}
}

.lead() {
	margin-bottom: @line-height-computed;
	font-size: (@font-size-base * 1.15);
	font-weight: 200;
	line-height: 1.4;
	@media (min-width: @screen-sm) {
		font-size: (@font-size-base * 1.5);
	}
}

.small() {
	font-size: 85%;
}

.text-muted() {
	color: @text-muted;
}

.text-primary() {
	color: @brand-primary;
	&:hover {
		color: darken(@brand-primary, 10%);
	}
}

.text-warning() {
	color: @state-warning-text;
	&:hover {
		color: darken(@state-warning-text, 10%);
	}
}

.text-danger() {
	color: @state-danger-text;
	&:hover {
		color: darken(@state-danger-text, 10%);
	}
}

.text-success() {
	color: @state-success-text;
	&:hover {
		color: darken(@state-success-text, 10%);
	}
}

.text-info() {
	color: @state-info-text;
	&:hover {
		color: darken(@state-info-text, 10%);
	}
}

.text-left() {
	text-align: left;
}

.text-right() {
	text-align: right;
}

.text-center() {
	text-align: center;
}

.page-header() {
	padding-bottom: ((@line-height-computed / 2) - 1);
	margin: (@line-height-computed * 2) 0 @line-height-computed;
	border-bottom: 1px solid @page-header-border-color;
}

.h1() {
	text-align: left;
}

.text-right() {
	text-align: right;
}

.text-center() {
	text-align: center;
}

.page-header() {
	padding-bottom: ((@line-height-computed / 2) - 1);
	margin: (@line-height-computed * 2) 0 @line-height-computed;
	border-bottom: 1px solid @page-header-border-color;
}

.list-unstyled() {
	padding-left: 0;
	list-style: none;
}

.list-inline() {
	.list-unstyled();
	> li {
		display: inline-block;
		padding-left: 5px;
		padding-right: 5px;
	}
}

.dl-horizontal() {
	@media (min-width: @grid-float-breakpoint) {
		dt {
			float: left;
			width: (@component-offset-horizontal - 20);
			clear: left;
			text-align: right;
			.text-overflow();
		}

		dd {
			margin-left: @component-offset-horizontal;
			.clearfix(); // Clear the floated `dt` if an empty `dd` is present
		}
	}
}

.clearfix() {
	.clearfix();
}

.center-block() {
	.center-block();
}

.pull-right() {
	float: right !important;
}

.pull-left() {
	float: left !important;
}

.hide() {
	display: none !important;
}

.show() {
	display: block !important;
}

.invisible() {
	visibility: hidden;
}

.text-hide() {
	.text-hide();
}

.affix() {
	position: fixed;
}

.well() {
	min-height: 20px;
	padding: 19px;
	margin-bottom: 20px;
	background-color: @well-bg;
	border: 1px solid darken(@well-bg, 7%);
	border-radius: @border-radius-base;
	.box-shadow(inset 0 1px 1px rgba(0,0,0,.05));
	blockquote {
		border-color: #ddd;
		border-color: rgba(0, 0, 0, .15);
	}
}

.well-lg() {
	padding: 24px;
	border-radius: @border-radius-large;
}

.well-sm() {
	padding: 9px;
	border-radius: @border-radius-small;
}
